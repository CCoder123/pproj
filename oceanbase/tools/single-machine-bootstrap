#!/bin/bash

usages() {
    echo "Usages:"
    echo " generate config file and data dir:"
    echo "  $0 init"
    echo ""
    echo " start server:"
    echo "  $0 start [rootserver|chunkserver|mergeserver|updateserver]"
}

real_file=`readlink -f $0`
cd `dirname $real_file`
ob_home="`pwd`"
export LD_LIBRARY_PATH=$ob_home/lib:$LD_LIBRARY_PATH

echo "Your OceanBase Home is: $ob_home"

start()
{
    if [ "$1" != "rootserver" -a "$1" != "chunkserver" -a "$1" != "mergeserver" -a "$1" != "updateserver" ]; then
        echo "You need to specify one of 'rootserver|chunkserver|mergeserver|updateserver' as argument"
        exit 1
    fi
    echo "start $1..."
    bin/$1 -N -f etc/$1.conf
}

init() {
    echo "init..."
    mkdir -p etc
    cat > etc/schema.ini <<EOF
[app_name]
name=test
max_table_id=1002

[table]
table_id=1001
max_column_id=27
table_type=1
rowkey_is_fixed_length=0
column_info=1,2,name,varchar,128
column_info=1,3,value,int
rowkey_max_length=17
rowkey_split=8
EOF

    cat > etc/rootserver.conf <<EOF
[root_server]
pid_file=data/log/rootserver.pid
log_file=data/log/rootserver.log
data_dir=data/rs
log_level=info
dev_name=eth0
vip=127.0.0.1
port=2542

thread_count=20
read_queue_size=500
write_queue_size=50

log_queue_size=50
network_timeout=1000000
migrate_wait_seconds=90

log_dir_path=data/rs_commitlog
log_size=64

state_check_period_us=500000
replay_wait_time_us=5000
log_sync_limit_kb=51200
register_times=10
register_timeout_us=2000000

lease_on=1
lease_interval_us=15000000
lease_reserved_time_us=10000000
cs_command_interval_us=60000000
__create_table_in_init=1
__safe_copy_count_in_init=1

[update_server]
vip=127.0.0.1
port=2742
ups_inner_port=2942

[schema]
file_name=etc/schema.ini

[chunk_server]
lease=10000000
switch_hour=23
disk_high_level=85
disk_trigger_level=75
shared_adjacnet=10
safe_lost_one_duration=28800
wait_init_duration=60
max_merge_duration=14400
EOF

    cat > etc/updateserver.conf <<EOF
[public]
log_file = data/log/updateserver.log
pid_file = data/log/updateserver.pid
log_level = info

[update_server]
vip = 127.0.0.1
port = 2742
ups_inner_port = 2942
dev_name = eth0
app_name = test
log_size_mb = 64
log_dir_path = data/ups_commitlog
fetch_schema_times = 10
fetch_schema_timeout_us = 3000000
resp_root_times = 10
resp_root_timeout_us = 1000000
log_sync_type = 1

read_thread_count = 14
read_task_queue_size = 1000
write_task_queue_size = 1000
log_task_queue_size = 1000

write_group_commit_num = 1024

    log_sync_limit_kb = 51200
    replay_wait_time_us = 5000
    state_check_period_us = 500000

#总内存使用上限 超过后不再分配 单位GB
    total_memory_limit = 6
#所有memtable内存使用上限 超过后不再分配 单位GB
    table_memory_limit = 4

    lease_interval_us = 15000000
    lease_reserved_time_us = 10000000
    lease_on = 1

    log_sync_timeout_us = 500000
    log_sync_retry_times = 2

    max_thread_memblock_num = 10

    packet_max_timewait = 1000000

    transaction_process_time_warning_us = 1000000

#sstable文件存储的根目录 必须是相对目录
    store_root = data/ups_data
#store_root下raid目录名的匹配式
    raid_regex = ^raid[0-9]+$
#raid目录下指向磁盘实际目录的软链接的名字匹配式
    dir_regex = ^store[0-9]+$

#读取sstable的blockcache的大小 单位MB
blockcache_size_mb = 1024
#读取sstable的blockindex cache的大小单位 MB
blockindex_cache_size_mb = 100

#活跃memtable内存使用上限 超过后执行一次冻结 单位GB
active_mem_limit_gb = 1
#冻结memtable在占内存上限 超过后drop掉已转储的最旧的memtable 单位GB
frozen_mem_limit_gb = 1
#sstable被加载到内存的最长时间 超过这个时间的sstable被卸载 文件被改名到trash目录 单位秒
sstable_time_limit_s = 604800
#每天定时执行升级主版本号的冻结操作的时间 格式为%H:%M 非法格式为不执行
major_freeze_duty_time = 01:00
#两次升级主版本号时间差的最小值 如果小于这个值则执行major freze失败
min_major_freeze_interval_s = 36000

#写sstable的压缩方法动态库名
sstable_compressor_name = lzo_1.0
#写sstable的block的大小 单位Byte
sstable_block_size = 4096

[root_server]
vip = 127.0.0.1
port = 2542
EOF

cat > etc/mergeserver.conf <<EOF
[merge_server]
#listen port
port=2842
#listen device
dev_name=eth0
#建议配置512，该配置项会增加内存的占用每个task占用2M内存
task_queue_size=512
#建议配置30~50，取决于机器上部署的模块，可以使用的核心的4倍
task_thread_count=50
#ms与cs、ups的网络通信超时时间，建议配置3000000(3s)，复杂查询可以增大
network_timeout_us=3000000
#tablet location cache size in Mbytes，建议最小配置32M(256*tablet数量*1.2)
location_cache_size_mb=32
#tablet location cache timeout in us，建议配置分钟级，默认配置10分钟
location_cache_timeout_us=600000000
#日志文件路径
log_file=data/log/mergeserver.log
#pid文件路径
pid_file=data/log/mergeserver.pid
#建议配置info
log_level=info
#建议配置1024M
max_log_file_size=1024
#mergeserver处理请求时保存中间结果可使用的内存大小，
#磁盘到内存的扩张倍数大约为4
intermediate_buffer_size_mbyte=8
#mergeserver最多可以使用的内存占系统物理内存的百分比
memory_size_limit_percent=15

[root_server]              
vip=127.0.0.1
port=2542
EOF

cat > etc/chunkserver.conf <<EOF
[public]
pid_file = data/log/chunkserver.pid
log_file = data/log/chunkserver.log
log_level = info

[chunk_server]
dev_name = eth0
port = 2642
task_queue_size = 1000  
task_thread_count = 50
max_migrate_task_count=1
max_sstable_size = 268435456

datadir_path = data/cs
application_name = test
network_timeout= 1000000
merge_timeout=3000000

lease_check_interval=5000000
retry_times=3
migrate_band_limit_kbps=51200

merge_mem_limit=67108864
#merge_thread_per_disk=1
#reserve_sstable_copy=2
merge_load_threshold_high=16
merge_threshold_request_high=3000
max_merge_thread_num=10

[memory_cache]
block_cache_memsize_mb = 4096
file_info_cache_max_cache_num = 4096

block_index_cache_memsize_mb = 512

join_cache_memsize_mb=5120

[root_server]
vip = 127.0.0.1
port=2542
EOF

nic=`/sbin/ifconfig | sed -n '1s/^\(\S*\).*/\1/p'`
ip=`/sbin/ifconfig |sed -n '/inet addr/s/ *inet addr:\([.0-9]*\).*/\1/p' |head -1`
sed -i "s/^\s*dev_name\s*=.*$/dev_name=$nic/" etc/*.conf
sed -i "s/^\s*vip\s*=.*$/vip=$ip/" etc/*.conf

rm -rf data
mkdir -p data/{log,cs/{1..10}/test/sstable,rs,{rs,ups}_commitlog,ups_data/{raid{0,1},{0,1}-{0,1}/ups_store}}
for i in {0,1}; do
    for j in {0,1}; do
        ln -sf `pwd`/data/ups_data/$i-$j/ups_store data/ups_data/raid$i/store$j;
    done
done
}
method=${1:-init}
shift
$method $*
